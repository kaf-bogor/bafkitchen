rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    function isAdmin() {
      return isSignedIn() &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Public reads for catalog
    match /products/{id} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    match /categories/{id} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }
    match /stores/{id} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Users collection
    match /users/{uid} {
      allow read: if isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Orders: creation by signed-in users, status updates by admins
    match /orders/{orderId} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.customerId == request.auth.uid);
      allow create: if isSignedIn();
      allow update, delete: if isAdmin();
    }

    // Schedules
    match /schedules/{scheduleId} {
      allow read: if true;
      allow create, update, delete: if isAdmin();
    }

    // Invoices: admins have full access, vendors can read their own invoices
    match /invoices/{invoiceId} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.vendorId == request.auth.uid);
      allow create, update, delete: if isAdmin();
    }

    // Vendors: similar to stores but dedicated collection for vendor management
    match /vendors/{vendorId} {
      allow read: if isAdmin() || (isSignedIn() && resource.data.userId == request.auth.uid);
      allow create, update, delete: if isAdmin();
    }
  }
}
