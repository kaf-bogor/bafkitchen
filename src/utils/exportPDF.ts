import { format } from 'date-fns'
import { id } from 'date-fns/locale'
import jsPDF from 'jspdf'

import { IInvoice } from '@/interfaces/invoice'
import { currency } from '@/utils'

export const exportInvoiceToPDF = (invoice: IInvoice) => {
  const pdf = new jsPDF()
  
  // Set font
  pdf.setFont('helvetica', 'normal')
  
  // Company Header
  pdf.setFontSize(20)
  pdf.setTextColor(37, 99, 235) // Blue color
  pdf.text('BAFkitchen', 20, 25)
  
  pdf.setFontSize(10)
  pdf.setTextColor(100, 100, 100)
  pdf.text('Invoice Management System', 20, 32)
  
  // Invoice Title
  pdf.setFontSize(24)
  pdf.setTextColor(0, 0, 0)
  pdf.text('INVOICE', 150, 25)
  
  // Invoice Number and Date
  pdf.setFontSize(12)
  pdf.text(`Invoice #: ${invoice.invoiceNumber}`, 150, 35)
  pdf.text(`Issue Date: ${format(new Date(invoice.issuedDate), 'dd MMMM yyyy', { locale: id })}`, 150, 42)
  pdf.text(`Due Date: ${format(new Date(invoice.dueDate), 'dd MMMM yyyy', { locale: id })}`, 150, 49)
  
  // Status
  const statusColor = getStatusColor(invoice.status)
  pdf.setTextColor(statusColor.r, statusColor.g, statusColor.b)
  pdf.text(`Status: ${invoice.status.toUpperCase()}`, 150, 56)
  
  // Reset color
  pdf.setTextColor(0, 0, 0)
  
  // Vendor Information
  pdf.setFontSize(14)
  pdf.text('Bill To:', 20, 70)
  
  pdf.setFontSize(11)
  pdf.text(`Vendor: ${invoice.vendorName}`, 20, 80)
  pdf.text(`Vendor ID: ${invoice.vendorId}`, 20, 87)
  
  // Customer Information
  pdf.text('Customer Information:', 20, 105)
  pdf.text(`Name: ${invoice.customer?.name || 'N/A'}`, 20, 115)
  pdf.text(`Phone: ${invoice.customer?.phoneNumber || 'N/A'}`, 20, 122)
  pdf.text(`Nama Santri: ${invoice.customer?.namaSantri || 'N/A'}`, 20, 129)
  pdf.text(`Kelas: ${invoice.customer?.kelas || 'N/A'}`, 20, 136)
  
  // Items Table Header
  let yPosition = 160
  pdf.setFontSize(12)
  pdf.setFillColor(240, 240, 240)
  pdf.rect(20, yPosition - 5, 170, 10, 'F')
  
  pdf.text('Product', 25, yPosition)
  pdf.text('Qty', 100, yPosition)
  pdf.text('Unit Price', 120, yPosition)
  pdf.text('Total', 160, yPosition)
  
  // Items
  pdf.setFontSize(10)
  yPosition += 15
  
  invoice.items.forEach((item) => {
    if (yPosition > 250) {
      pdf.addPage()
      yPosition = 30
    }
    
    // Wrap long product names
    const productName = item.productName.length > 35 ? 
      item.productName.substring(0, 35) + '...' : item.productName
    
    pdf.text(productName, 25, yPosition)
    pdf.text(item.quantity.toString(), 105, yPosition)
    pdf.text(currency.toIDRFormat(item.unitPrice), 125, yPosition)
    pdf.text(currency.toIDRFormat(item.totalPrice), 165, yPosition)
    
    yPosition += 10
  })
  
  // Summary
  yPosition += 10
  pdf.line(20, yPosition, 190, yPosition)
  yPosition += 15
  
  pdf.setFontSize(11)
  
  // Subtotal
  pdf.text('Subtotal:', 120, yPosition)
  pdf.text(currency.toIDRFormat(invoice.totalAmount), 165, yPosition)
  yPosition += 10
  
  // Commission (if applicable)
  if (invoice.commission) {
    pdf.setTextColor(100, 100, 100)
    pdf.text(`BAFkitchen Commission (${invoice.commission.percentage}%):`, 120, yPosition)
    pdf.text(`-${currency.toIDRFormat(invoice.commission.amount)}`, 165, yPosition)
    yPosition += 10
    
    // Net Amount
    pdf.setTextColor(0, 0, 0)
    pdf.setFontSize(12)
    pdf.text('Net Amount:', 120, yPosition)
    pdf.text(currency.toIDRFormat(invoice.totalAmount - invoice.commission.amount), 165, yPosition)
    yPosition += 15
  }
  
  // Payment Information
  if (invoice.settledDate) {
    pdf.setTextColor(34, 197, 94) // Green
    pdf.text(`Settled on: ${format(new Date(invoice.settledDate), 'dd MMMM yyyy', { locale: id })}`, 20, yPosition)
  } else {
    const isOverdue = new Date(invoice.dueDate) < new Date()
    if (isOverdue) {
      pdf.setTextColor(239, 68, 68) // Red
      pdf.text('OVERDUE - Payment Required Immediately', 20, yPosition)
    } else {
      pdf.setTextColor(234, 179, 8) // Yellow
      pdf.text(`Payment due by: ${format(new Date(invoice.dueDate), 'dd MMMM yyyy', { locale: id })}`, 20, yPosition)
    }
  }
  
  // Footer
  pdf.setTextColor(100, 100, 100)
  pdf.setFontSize(8)
  pdf.text('Generated by BAFkitchen Invoice Management System', 20, 280)
  pdf.text(`Generated on: ${format(new Date(), 'dd MMMM yyyy HH:mm', { locale: id })}`, 20, 285)
  
  // Save the PDF
  const fileName = `Invoice_${invoice.invoiceNumber}_${invoice.vendorName.replace(/[^a-zA-Z0-9]/g, '_')}.pdf`
  pdf.save(fileName)
}

// Helper function to get status color
const getStatusColor = (status: string) => {
  switch (status.toLowerCase()) {
    case 'settled':
      return { r: 34, g: 197, b: 94 } // Green
    case 'overdue':
      return { r: 239, g: 68, b: 68 } // Red
    case 'issued':
      return { r: 59, g: 130, b: 246 } // Blue
    default:
      return { r: 234, g: 179, b: 8 } // Yellow
  }
}